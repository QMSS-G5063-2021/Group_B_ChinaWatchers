label = sprintf("<strong>%s</strong><br/><strong>Sector</strong>: %s<br/><strong>Investment ($m)</strong>: %1.f",
df_china_invest_grouped_tour$Country, 'Tourism', df_china_invest_grouped_tour$amount) %>% lapply(htmltools::HTML),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "12px", direction = "auto")) %>%
addPolygons(data=plot_map[plot_map$ADM0_A3 %in% df_china_invest_grouped_trans$alpha3, ],
stroke = FALSE,
smoothFactor = 0.1,
fillOpacity = 0.8,
fillColor = ~cv_pal_indiv(df_china_invest_grouped_trans$amount),
group='Transport',
label = sprintf("<strong>%s</strong><br/><strong>Sector</strong>: %s<br/><strong>Investment ($m)</strong>: %1.f",
df_china_invest_grouped_trans$Country, 'Transport', df_china_invest_grouped_trans$amount) %>% lapply(htmltools::HTML),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "12px", direction = "auto")) %>%
addPolygons(data=plot_map[plot_map$ADM0_A3 %in% df_china_invest_grouped_util$alpha3, ],
stroke = FALSE,
smoothFactor = 0.1,
fillOpacity = 0.8,
fillColor = ~cv_pal_indiv(df_china_invest_grouped_util$amount),
group='Utilities',
label = sprintf("<strong>%s</strong><br/><strong>Sector</strong>: %s<br/><strong>Investment ($m)</strong>: %1.f",
df_china_invest_grouped_util$Country, 'Utilities', df_china_invest_grouped_util$amount) %>% lapply(htmltools::HTML),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "12px", direction = "auto"))
map
df_china_invest_fordt <- rename(df_china_invest_grouped, c('Amount (U. S. Dollars)' = 'amount'))
vars <- c('Country', 'Sector', 'Investment_Count', 'Amount (U. S. Dollars)')
df_china_invest_fordt2 <- df_china_invest_fordt[ ,vars]
pretty_headers <-
gsub("[_]", " ", colnames(df_china_invest_fordt2)) %>%
stringr::str_to_title()
datatable(df_china_invest_fordt2,
colnames = pretty_headers)
CountryYearly <- chinainv_clean %>%
group_by(Year, Country) %>%
summarise(TotalInvestment = sum(Quantity, na.rm = T),
.groups = "keep")
byCountry <- CountryYearly %>%
group_by(Country) %>%
summarise(TotalInvestment = sum(TotalInvestment, na.rm = T)) %>%
arrange(desc(TotalInvestment))
top10countries <- byCountry %>%
head(10) %>%
select(Country) %>%
pull()
CountryColor <- data.frame(Country = top10countries,
Color = c("#0033cc", "#cc99ff", "#33cc33",
"#e600e6", "#ffbf00", "#00e6e6", "#ff6600",
"#cc0000", "#003366", "#666633"))
Top10CountryYearly <- CountryYearly %>%
filter(Country %in% top10countries) %>%
left_join(CountryColor, by = "Country")
countryViz <- Top10CountryYearly %>%
ggplot(aes(x = Year, y = TotalInvestment)) +
geom_line(aes(color = Country)) +
labs(title = "Chinese Foreign Investments in Top 10 Destinations (2005-2020)",
y = "Total Investments (in millions USD)") +
scale_color_manual(breaks = CountryColor$Country,
values = CountryColor$Color) +
ggthemes::theme_tufte() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplotly(countryViz)
top10CountryAmount <- byCountry %>%
head(10)
rankedCountry <- top10CountryAmount %>%
ggplot(aes(x = reorder(Country, TotalInvestment),
y = TotalInvestment)) +
geom_col(aes(fill = Country)) +
coord_flip() +
scale_fill_manual(breaks=CountryColor$Country,
values = CountryColor$Color) +
labs(title = "Total Foreign Investments in Top 10 Country Destinations (2005-2020)",
x = "",
y = "Total Investments (in millions USD)") +
ggthemes::theme_tufte() +
theme(legend.position = "none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
ggplotly(rankedCountry, tooltip = c("y"))
InvestorYearly <- chinainv_clean %>%
group_by(Year, Investor) %>%
summarise(TotalInvestment = sum(Quantity, na.rm = T),
.groups = "keep")
byInvestor <- chinainv_clean %>%
group_by(Investor) %>%
summarise(TotalInvestment = sum(Quantity, na.rm=T)) %>%
arrange(desc(TotalInvestment))
top5Investors <- byInvestor %>%
head(5) %>%
select(Investor) %>%
pull()
Top5InvestorYearly <- InvestorYearly %>%
filter(Investor %in% top5Investors)
nbColorsInvestor <- 5
InvColors <- colorRampPalette(brewer.pal(5, "Set1"))(nbColorsInvestor)
InvestorColor <- data.frame(Investor = top5Investors, Color = InvColors)
investorViz <- Top5InvestorYearly %>%
ggplot(aes(x = Year, y = TotalInvestment)) +
geom_line(aes(color = Investor)) +
labs(title = "Chinese Foreign Investments by Five Largest Investors (2005-2020)",
y = "Total Investments (in millions USD)") +
ylim(0,20000)+
scale_color_manual(breaks = InvestorColor$Investor, values=InvestorColor$Color) +
ggthemes::theme_tufte() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplotly(investorViz)
top5InvestorAmount <- byInvestor %>%
head(5)
top5InvestorAmount[[5,1]] <- "China Reform\nHoldings,\nChemChina"
InvestorColor1 <- InvestorColor
InvestorColor1[[5,1]] <- "China Reform\nHoldings,\nChemChina"
rankedInvestor <- top5InvestorAmount %>%
ggplot(aes(x = reorder(Investor, TotalInvestment),
y = TotalInvestment)) +
geom_col(aes(fill = Investor)) +
scale_fill_manual(breaks = InvestorColor1$Investor, values=InvestorColor1$Color)+
coord_flip() +
labs(title = "Total Foreign Investments by Top 5 Chinese Investors (2005-2020)",
x = "",
y = "Total Investments (in millions USD)") +
ggthemes::theme_tufte() +
theme(legend.position = "none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
ggplotly(rankedInvestor, tooltip = c("y"))
SectorYearly <- chinainv_clean %>%
group_by(Year, Sector) %>%
summarise(TotalInvestment = sum(Quantity, na.rm = T),
.groups = "keep")
bySector <- SectorYearly %>%
group_by(Sector) %>%
summarise(TotalInvestment = sum(TotalInvestment, na.rm = T)) %>%
arrange(desc(TotalInvestment))
Sectors <- unique(SectorYearly$Sector)
nb.cols <- 14
mycolors <- colorRampPalette(brewer.pal(9, "Set1"))(nb.cols)
SectorColor <- data.frame(Sector = Sectors, Color = mycolors)
sectorViz <- SectorYearly %>%
ggplot(aes(x = Year, y = TotalInvestment)) +
labs(title = "Chinese Foreign Investments by Sector (2005-2020)",
y = "Total Investments (in millions USD)") +
geom_line(aes(color = Sector)) +
scale_color_manual(breaks = SectorColor$Sector, values = SectorColor$Color) +
ggthemes::theme_tufte() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplotly(sectorViz)
SectorGrouped <- chinainv_clean %>%
group_by(Sector) %>%
summarise(TotalInvestment = sum(Quantity, na.rm = T)) %>%
arrange(desc(TotalInvestment))
rankedSector <- SectorGrouped %>%
ggplot(aes(x = reorder(Sector, TotalInvestment),
y = TotalInvestment)) +
geom_col(aes(fill = Sector)) +
coord_flip() +
scale_fill_manual(breaks=SectorColor$Sector,
values = SectorColor$Color) +
labs(title = "Total Foreign Investments by Sector (2005-2020)",
x = "",
y = "Total Investments (in millions USD)") +
ggthemes::theme_tufte() +
theme(legend.position = "none") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
ggplotly(rankedSector, tooltip = c("y"))
transposed <- as.data.frame(t(as.matrix(df))) #Transpose
#get the variables we want#
colnames(transposed) <- transposed[1,]
transposed$year <- rownames(transposed)
transposed <- transposed %>% #moving year to the first
select(year, everything())
tranposed_new <- transposed[!(rownames(transposed) %in% c('Country Name', 'Country Code')), ]
tranposed_new$`China` <- as.numeric(tranposed_new$`China`)
tranposed_new$`United States` <- as.numeric(tranposed_new$`United States`)
tranposed_new$`year` <- as.numeric(tranposed_new$`year`)
#write.csv(tranposed_new, 'countriesfdi_new.csv')
colors <- c("China" = "red", "United States" = "blue")
china_us_fdi <- ggplot(tranposed_new) +
geom_point(aes(x = `year`, y = `China`, color = "China")) +
geom_smooth(aes(x = `year`, y = `China`, color = "China"), method='loess', se = F) +
geom_point(aes(x = `year`, y = `United States`, color = "United States")) +
stat_smooth(aes(x = `year`, y = `United States`, color = "United States"), method='loess', se = F) +
ggthemes::theme_tufte() +
labs(
x = 'Year',
y = 'FDI Net Outflows (%GDP)',
title = 'US vs China FDI Outflows (as %GDP)',
color = "Legend"
) +
scale_color_manual(values = colors)
ggplotly(china_us_fdi, tooltip =c("x", "y"))
# libraries
library(plotly)
library(tidyr)
library(dplyr)
library(ggmap)
library(scales)
library(countrycode)
library(tmap)
library(geojsonio)
# data manipulation
china_africa_stock = readxl::read_xlsx("./data/FDIData_08Jan2021.xlsx", skip=1, n_max=30)
china_africa_stock = china_africa_stock %>% select(where(function(x) !all(is.na(x)))) %>% rename("year"="US$ mn, unadjusted")
china_africa_flow = readxl::read_xlsx("./data/FDIData_08Jan2021.xlsx", skip=1, n_max=30, sheet=2)
china_africa_flow = china_africa_flow %>% select(where(function(x) !all(is.na(x)))) %>% rename("year"="US$ mn, unadjusted")
china_africa = cbind(china_africa_stock["year"], china_africa_stock["Total, US$ bn"], china_africa_flow["Total, US$ bn"])
names(china_africa) = c("year", "stock", "flow")
us_africa = readxl::read_xlsx("./data/FDIData_08Jan2021.xlsx", skip=1, n_max=30, sheet=6)
us_africa = us_africa %>% rename("year"="US$ bn, unadjusted", "flow"="Flows*", "stock"="Stock")
china_africa_long = pivot_longer(china_africa, 2:3, names_to="fdi_type", values_to="net_investment_value")
china_africa_long$country="China"
us_africa_long = pivot_longer(us_africa, 2:3, names_to="fdi_type", values_to="net_investment_value")
us_africa_long$country="US"
totals = rbind(china_africa_long, us_africa_long)
china_flow_long = china_africa_flow %>% pivot_longer(2:54, names_to="country", values_to="flow_investment") %>%
filter(!is.na(flow_investment), country!="Regional", country !="Total, US$ mn") %>% select(year, country, flow_investment)
china_stock_long = china_africa_stock %>% pivot_longer(2:54, names_to="country", values_to="stock_investment") %>%
filter(!is.na(stock_investment), country!="Regional") %>% select(year, country, stock_investment)
china_stock_long$iso = countrycode(china_stock_long$country, origin="country.name", destination="iso3c")
stock_plot = ggplot(filter(totals, fdi_type=="stock", year >=2003), aes(x=year, y=net_investment_value, fill=country)) +
geom_bar(aes(fill=country), stat="identity") +
ggthemes::theme_tufte() +
labs(x= "Year", y="Investment amount in billions of USD, unadjusted",
title="FDI in Africa by Year: Stock") +
scale_x_continuous(breaks=2003:2019) +
scale_y_continuous(labels=scales::unit_format(unit="b"))
g = ggplotly(stock_plot)
g
flow_plot = ggplot(filter(totals, fdi_type=="flow", year >= 2003), aes(x=year, y=net_investment_value, fill=country)) +
geom_bar(aes(fill=country), stat="identity") +
ggthemes::theme_tufte() +
labs(x= "Year", y="Investment amount in billions of USD, unadjusted",
title="Net FDI to Africa by Year: Flow") +
scale_x_continuous(breaks=2003:2019) +
scale_y_continuous(labels=scales::unit_format(unit="b"), breaks=seq(-3, 12, 2))
ggplotly(flow_plot)
top_10_stock = china_stock_long %>% group_by(country) %>% summarize(max=max(stock_investment)) %>% arrange(desc(max)) %>% head(10) %>% select(country) %>% unlist()
by_country_stock = china_stock_long %>% filter(country %in% top_10_stock) %>%
plot_ly(x=~year, y=~stock_investment, split=~country, type = "scatter", mode='lines') %>%
# add_annotations(x=0, y=-.1, xref="paper", yref="paper", text=caption, showarrow=FALSE) %>%
layout(
title="Top 10 most invested African countries by year: Stock",
yaxis=list(title="Investment Amount (US$ million, unadjusted)")
)
by_country_stock
library(leaflet.extras)
china_stock_wide = china_stock_long %>% pivot_wider(id_cols=c(country, iso), names_from=year, values_from="stock_investment")
africa_geo = geojson_read("./data/africa.geo.json", what="sp")
africa_geo@data = africa_geo@data %>% left_join(china_stock_wide, by=c("gu_a3"="iso"))
africa_geo = geojson_read("./data/africa.geo.json", what="sp")
africa_geo@data = africa_geo@data %>% left_join(china_stock_wide, by=c("gu_a3"="iso"))
pal=colorNumeric("Reds", domain=china_stock_long$stock_investment)
leaflet(africa_geo) %>% addTiles() %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2019`),
stroke=FALSE,
group="2019",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2019`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=colorNumeric("Reds", domain=africa_geo$`2018`)(africa_geo$`2018`),
stroke=FALSE,
group="2018",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2018`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2017`),
stroke=FALSE,
group="2017",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2017`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2016`),
stroke=FALSE,
group="2016",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2016`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2015`),
stroke=FALSE,
group="2015",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2015`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2014`),
stroke=FALSE,
group="2014",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2014`) %>% lapply(htmltools::HTML)) %>%
addLegend(pal=pal, values=china_stock_long$stock_investment, title="Millions USD",
position="bottomright") %>%
addLayersControl(position='bottomleft',
baseGroups = c("2019", "2018", "2017", "2016", "2015", "2014"),
options = layersControlOptions(collapsed = FALSE)) %>%
leaflet.extras::addResetMapButton()
# old map
# china_stock_wide = china_stock_long %>% pivot_wider(id_cols=c(country, iso), names_from=year, values_from="stock_investment")
#
# africa_geo = geojson_read("./data/africa.geo.json", what="sp")
# africa_geo@data = africa_geo@data %>% left_join(china_stock_wide, by=c("gu_a3"="iso"))
#
#
# m = tm_shape(africa_geo) +
#   tm_borders() +
#   tm_text("country", size = .5) +
#   tm_fill("2019", title="Millions USD", convert2density = FALSE) +
#   tm_layout(
#     main.title="2019 China FDI Heatmap: Stock",
#     frame=FALSE
#   )
# m
# scratchwork
# library(leaflet.extras)
# leaflet(africa_geo) %>% addTiles() %>%
#
#   addPolygons(data=africa_geo,
#               fillColor=colorNumeric("Reds", domain=africa_geo$`2019`)(africa_geo$`2019`),
#               stroke=FALSE,
#               group="2019",
#               label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2019`) %>% lapply(htmltools::HTML)) %>%
#   addLegend(pal=colorNumeric("Reds", domain=africa_geo$`2019`), values=africa_geo$`2019`, title="Millions USD",
#             group="2019",
#             position="bottomright") %>%
#   addPolygons(data=africa_geo,
#               fillColor=colorNumeric("Reds", domain=africa_geo$`2018`)(africa_geo$`2018`),
#               stroke=FALSE,
#               group="2018",
#               label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2018`) %>% lapply(htmltools::HTML)) %>%
#   addLegend(pal=colorNumeric("Reds", domain=africa_geo$`2018`), values=africa_geo$`2018`, title="Millions USD",
#             group="2018",
#             position="bottomright") %>%
#   addLayersControl(position='bottomleft',
#                    overlayGroups = c("2019", "2018")) %>%
#                    # options = layersControlOptions(collapsed = FALSE)) %>%
#   leaflet.extras::addResetMapButton()
library(leaflet.extras)
china_stock_wide = china_stock_long %>% pivot_wider(id_cols=c(country, iso), names_from=year, values_from="stock_investment")
africa_geo = geojson_read("./data/africa.geo.json", what="sp")
africa_geo@data = africa_geo@data %>% left_join(china_stock_wide, by=c("gu_a3"="iso"))
africa_geo = geojson_read("./data/africa.geo.json", what="sp")
africa_geo@data = africa_geo@data %>% left_join(china_stock_wide, by=c("gu_a3"="iso"))
pal=colorNumeric("Reds", domain=china_stock_long$stock_investment)
leaflet(africa_geo, options = leafletOptions(minZoom = 1.25,
worldCopyJump=FALSE,
maxBounds = list(
list(-90, -180),
list(90, 180)))) %>% addTiles() %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2019`),
stroke=FALSE,
group="2019",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2019`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=colorNumeric("Reds", domain=africa_geo$`2018`)(africa_geo$`2018`),
stroke=FALSE,
group="2018",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2018`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2017`),
stroke=FALSE,
group="2017",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2017`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2016`),
stroke=FALSE,
group="2016",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2016`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2015`),
stroke=FALSE,
group="2015",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2015`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2014`),
stroke=FALSE,
group="2014",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2014`) %>% lapply(htmltools::HTML)) %>%
addLegend(pal=pal, values=china_stock_long$stock_investment, title="Millions USD",
position="bottomright") %>%
addLayersControl(position='bottomleft',
baseGroups = c("2019", "2018", "2017", "2016", "2015", "2014"),
options = layersControlOptions(collapsed = FALSE)) %>%
leaflet.extras::addResetMapButton()
library(leaflet.extras)
china_stock_wide = china_stock_long %>% pivot_wider(id_cols=c(country, iso), names_from=year, values_from="stock_investment")
africa_geo = geojson_read("./data/africa.geo.json", what="sp")
africa_geo@data = africa_geo@data %>% left_join(china_stock_wide, by=c("gu_a3"="iso"))
africa_geo = geojson_read("./data/africa.geo.json", what="sp")
africa_geo@data = africa_geo@data %>% left_join(china_stock_wide, by=c("gu_a3"="iso"))
pal=colorNumeric("Reds", domain=china_stock_long$stock_investment)
leaflet(africa_geo, options = leafletOptions(minZoom = 1.25,
worldCopyJump=FALSE,
maxBounds = list(
list(-90, -180),
list(90, 180)))) %>% addTiles() %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2019`),
stroke=FALSE,
group="2019",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2019`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=colorNumeric("Reds", domain=africa_geo$`2018`)(africa_geo$`2018`),
stroke=FALSE,
group="2018",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2018`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2017`),
stroke=FALSE,
group="2017",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2017`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2016`),
stroke=FALSE,
group="2016",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2016`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2015`),
stroke=FALSE,
group="2015",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2015`) %>% lapply(htmltools::HTML)) %>%
addPolygons(data=africa_geo,
fillColor=pal(africa_geo$`2014`),
stroke=FALSE,
group="2014",
label=sprintf("Country: %s<br/>Investment (Millions USD): $%1.fm", africa_geo$country, africa_geo$`2014`) %>% lapply(htmltools::HTML)) %>%
addLegend(pal=pal, values=china_stock_long$stock_investment, title="Millions USD",
position="bottomright") %>%
addLayersControl(position='bottomleft',
baseGroups = c("2019", "2018", "2017", "2016", "2015", "2014"),
options = layersControlOptions(collapsed = FALSE)) %>%
leaflet.extras::addResetMapButton()
install.packages('widgetframe')
CountryYearly <- chinainv_clean %>%
group_by(Year, Country) %>%
summarise(TotalInvestment = sum(Quantity, na.rm = T),
.groups = "keep")
byCountry <- CountryYearly %>%
group_by(Country) %>%
summarise(TotalInvestment = sum(TotalInvestment, na.rm = T)) %>%
arrange(desc(TotalInvestment))
top10countries <- byCountry %>%
head(10) %>%
select(Country) %>%
pull()
CountryColor <- data.frame(Country = top10countries,
Color = c("#0033cc", "#cc99ff", "#33cc33",
"#e600e6", "#ffbf00", "#00e6e6", "#ff6600",
"#cc0000", "#003366", "#666633"))
Top10CountryYearly <- CountryYearly %>%
filter(Country %in% top10countries) %>%
left_join(CountryColor, by = "Country")
countryViz <- Top10CountryYearly %>%
ggplot(aes(x = Year, y = TotalInvestment)) +
geom_line(aes(color = Country)) +
labs(title = "Chinese Foreign Investments in Top 10 Destinations (2005-2020)",
y = "Total Investments (in millions USD)") +
scale_color_manual(breaks = CountryColor$Country,
values = CountryColor$Color) +
ggthemes::theme_tufte() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
frameWidget(ggplotly(countryViz))
widgetframe::frameWidget(ggplotly(countryViz))
CountryYearly <- chinainv_clean %>%
group_by(Year, Country) %>%
summarise(TotalInvestment = sum(Quantity, na.rm = T),
.groups = "keep")
byCountry <- CountryYearly %>%
group_by(Country) %>%
summarise(TotalInvestment = sum(TotalInvestment, na.rm = T)) %>%
arrange(desc(TotalInvestment))
top10countries <- byCountry %>%
head(10) %>%
select(Country) %>%
pull()
CountryColor <- data.frame(Country = top10countries,
Color = c("#0033cc", "#cc99ff", "#33cc33",
"#e600e6", "#ffbf00", "#00e6e6", "#ff6600",
"#cc0000", "#003366", "#666633"))
Top10CountryYearly <- CountryYearly %>%
filter(Country %in% top10countries) %>%
left_join(CountryColor, by = "Country")
countryViz <- Top10CountryYearly %>%
ggplot(aes(x = Year, y = TotalInvestment)) +
geom_line(aes(color = Country)) +
labs(title = "Chinese Foreign Investments in Top 10 Destinations (2005-2020)",
y = "Total Investments (in millions USD)") +
scale_color_manual(breaks = CountryColor$Country,
values = CountryColor$Color) +
ggthemes::theme_tufte() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
i <- widgetframe::frameWidget(ggplotly(countryViz))
i
df_china_invest_fordt <- rename(df_china_invest_grouped, c('Amount (U. S. Dollars)' = 'amount'))
vars <- c('Country', 'Sector', 'Investment_Count', 'Amount (U. S. Dollars)')
df_china_invest_fordt2 <- df_china_invest_fordt[ ,vars]
pretty_headers <-
gsub("[_]", " ", colnames(df_china_invest_fordt2)) %>%
stringr::str_to_title()
dt <- widgetframe::frameWidget((datatable(df_china_invest_fordt2,
colnames = pretty_headers)))
dt
df_china_invest_fordt <- rename(df_china_invest_grouped, c('Amount (U. S. Dollars)' = 'amount'))
vars <- c('Country', 'Sector', 'Investment_Count', 'Amount (U. S. Dollars)')
df_china_invest_fordt2 <- df_china_invest_fordt[ ,vars]
pretty_headers <-
gsub("[_]", " ", colnames(df_china_invest_fordt2)) %>%
stringr::str_to_title()
dt <- datatable(df_china_invest_fordt2,
colnames = pretty_headers)
dt
